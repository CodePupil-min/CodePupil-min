/*
    实验一 创建数据库和表
*/
-- 1
create database YGGL1
on Primary(
    name = YGGL1,
	filename = 'D:\database\YGGL1_data.mdf',
    size=10MB,
    maxsize=50MB,
    filegrowth=5%
)
log on(
    name = YGGL1_log,
	filename = 'D:\database\YGGL1_log.ldf',
    size=2MB,
    maxsize=5MB,
    filegrowth=1MB
);

alter database YGGL1 modify file(
	name = YGGL1,
	filename = 'D:\database\YGGL1_data.mdf',
	size = 20MB
);

-- use YGGL1
-- 2
create table Salary1(
    EmployeeID char(6) not null primary key,
    InCome float not null,
    OutCome float not null,
    ActIncome as InCome-OutCome 
);

-- 3
create table Employees1(
    EmployeeID char(6) not null primary key,
    "Name" char(10) not null,
    Education char(4) not null,
    Birthday date not null,
    Gender bit(1) not null default(1),
    WorkYear tinyint,
    Address varchar(40),
    PhoneNumber char(12),
    DepartmentID char(3) not null,
    foreign key(DepartmentID) references Departments(DepartmentID)
);
alter table Employees1 drop column Address;
alter table Employees1 alter Gender set default 0;

/*
    实验二 数据插入、修改、删除
*/
-- 1 实验
-- 2 
UPDATE Employees SET DepartmentID = '4' WHERE EmployeeID = '010008';
-- 3
create table Employees2(
    EmployeeID char(6) not null primary key,
    "Name" char(10) not null,
    Education char(4) not null,
    Birthday date not null,
    Gender bit(1) not null default(1),
    WorkYear tinyint,
    Address varchar(40),
    PhoneNumber char(12),
    DepartmentID char(3) not null,
    foreign key(DepartmentID) references Departments(DepartmentID)
);
INSERT INTO Employees2 SELECT * FROM Employees;
-- 4
UPDATE Salary SET InCome = 2890 WHERE EmployeeID = '000001';
-- 5
DELETE FROM Employees WHERE EmployeeID = '000001';
DELETE FROM Salary WHERE EmployeeID = '000001';
/*
-- 添加
insert into Employees(
    EmployeeID,"Name",Education,Birthday,Gender,WorkYear,Address,PhoneNumber,DepartmentID)
    values("000001","王林","本科","1966-01-23",1,8,"中山路32-1-508","83355668",'2');
insert into Salary(EmployeeID,InCome,OutCome)values("000001",2100.8,123.09);
*/

/*
    实验三 数据库的查询
*/
-- 1
SELECT Address, Phonenumber FROM Employees;
-- 2
SELECT Address as "地址", Phonenumber as "电话" FROM Employees;
-- 3
SELECT  Phonenumber FROM Employees where EmployeeID in (select EmployeeID from salary WHERE InCome>2000);
-- 4
select InCome-OutCome from salary;
-- 5
SELECT COUNT(employeeID) from employees;
-- 6
SELECT departmentID from employees where "Name" like "王%";
-- 7
select EmployeeID from salary WHERE InCome between 2000 and 3000;
-- 8
select * from employees WHERE departmentID in (SELECT departmentID from departments where departmentName="财务部");
-- 9
SELECT * FROM employees JOIN salary WHERE employees.EmployeeID=salary.EmployeeID; 
-- 10
SELECT departmentName FROM employees,departments WHERE departments.DepartmentID=employees.DepartmentID and "Name"="王林";
-- 11
SELECT AVG(InCome) 
from salary 
where employeeID 
in(
	SELECT employeeId 
    from employees 
    where departmentID=(
		SELECT departmentID 
        from departments 
        where departmentName="财务部"
    )
);
-- 12
SELECT gender,count(employeeID) from employees GROUP BY gender;
-- 13
select b.departmentName,count(a.employeeID)
from employees a,departments b
where a.departmentID=b.departmentID
group by b.departmentName
having count(a.employeeID)>2;
-- 14
SELECT a.* from employees a,salary b WHERE a.EmployeeID=b.EmployeeID  order by b.InCome asc;
-- 15
SELECT AVG(b.InCome-b.OutCome) 
from employees a,salary b 
WHERE a.EmployeeID=b.EmployeeID 
and departmentID=(
    SELECT departmentID 
    from departments 
    where departmentName="财务部"
);
-- 16
SELECT MAX(b.InCome),MIN(b.InCome) 
from employees a,salary b 
WHERE a.EmployeeID=b.EmployeeID 
and departmentID=(
    SELECT departmentID 
    from departments 
    where departmentName="财务部"
);
-- 17
SELECT "Name" 
from employees a,salary b 
WHERE a.EmployeeID=b.EmployeeID 
and b.InCome>(
    SELECT MAX(b.InCome) 
    from employees a,salary b 
    WHERE a.EmployeeID=b.EmployeeID 
    and departmentID=(
        SELECT departmentID 
        from departments 
        where departmentName="财务部"
    )
);
-- 18
select "Name"  
from employees e,departments d 
where e.DepartmentID=d.DepartmentID 
and departmentName="财务部" 
and birthday<=(
    select MIN(birthday) 
    from employees e,departments d 
    where e.DepartmentID=d.DepartmentID 
    and departmentName="研发部"
);
-- 19
SELECT education,COUNT(education) 人数
from employees
GROUP BY education
-- 20
SELECT WorkYear,COUNT(education) 人数
from employees
GROUP BY WorkYear

/*
    实验四 SQL编程
*/
-- 1
DECLARE @phone char(12)
SET @phone = (SELECT PhoneNumber 
            FROM Employees 
            WHERE EmployeeID = ‘020010’ )
SELECT @phone
-- 2
select * from Employees where Workyear>5
-- 3
if EXISTS(select "Name" from Employees where EmployeeID='111006') 
    select * from Employees where Employeeid='111006'
else
    select "査无此人"
-- 4
create function check_ID(@departmentID char(3))
returns Integer as
begin
	declare @num int
	if exists(select departmentId from departments
			where @departmentID=DepartmentID)
		select @num=0
	else
		select @num=-1
	return @num
end
go
-- 5
declare @num int
select @num=dbo.check_ID('2')
if @num=0
	insert Employees
	values('990210','张英','本科','1982-03-24',0,4,'南京路2-01','8497534','2')
go
-- 6
select YEAR(Birthday)from Employees where Employeeid='000001'
-- 7
SELECT DATEDIFF(day,'2001-06-09',GETDATE());

/*
    实验五 数据库的视图
*/
-- 1
CREATE VIEW Employees_view (EmployeeID, "Name", RealIncome)
   AS SELECT Employees.EmployeeID, "Name", InCome-OutCome
   FROM Employees, Salary
   WHERE Employees.EmployeeID = Salary.EmployeeID
-- 2
select * from employees_view where "Name"="王林";
-- 3
CREATE VIEW DS_view AS SELECT * FROM departments;
UPDATE DS_view SET DepartmentName = "生产车间" WHERE DepartmentID = '5';
select * from departments;
select * from DS_view;
-- 4
INSERT into DS_view values('6',"广告部","广告业务");
select * from departments;
-- 5 
select DepartmentName from DS_view where DepartmentID='3';
-- 6
UPDATE employees_view SET "Name" = "王浩" WHERE employeeID = '000001';
select * from employees;

/*
    实验6 索引和约束
*/
-- 1
CREATE INDEX Ad_ind ON Employees ( "Name", Address );
-- 2
create table Employees2(
    EmployeeID char(6) not null,
    "Name" char(10) not null primary key,
	Gender bit(1) not null default(1),
    Education char(4) not null,
	CONSTRAINT UK_id UNIQUE(EmployeeID)
);
-- 3
create table Salary2(
    EmployeeID char(6) not null primary key,
    InCome float not null,
    OutCome float not null,
	CONSTRAINT c1 check(InCome>=OutCome)
);
-- 4
insert into Salary2 values("000044",100,400);
-- 5
CREATE TABLE Employees3(
	EmployeeID char(6) not null,
	Birthday date not null,
	CONSTRAINT c2 CHECK(Birthday>"1980-1-1")
);
-- 6
CREATE RULE rule_work AS @WorkYear between 0 and 20;
EXEC sp_bindrule rule_work,'employees.WorkYear';
EXEC sp_unbindrule 'employees.WorkYear';

/*
    实验7 存储过程和触发器
*/
-- 1
USE YGGL
GO
CREATE PROCEDURE TEST @NUMBER1 int OUTPUT
AS
BEGIN
   DECLARE @NUMBER2 int
   SET @NUMBER2 = (SELECT COUNT(*) FROM Employees)
   SET @NUMBER1= @NUMBER2
END
-- 2
pass
-- 3
USE YGGL
GO
CREATE PROCEDURE EmployeeAdd( 
    @employeeid char(6), 
    @name char(10), 
    @education char(4), 
    @birthday datetime, 
    @workyear tinyint, 
    @gender bit, 
    @address char(40), 
    @phonenumber char(12), 
    @departmentID char(3)
)
AS
BEGIN
    INSERT INTO Employees
    VALUES(@employeeid, @name, @education, @birthday, @workyear, @gender, @address, @phonenumber, @departmentID )
END
RETURN
GO
-- 4
EXEC EmployeeAdd '990230','刘朝','本科','840909',2,1,'北京路501','85465213','3'
-- 5
USE YGGL
GO
CREATE TRIGGER EmployeesIns ON dbo.Employees
FOR INSERT, UPDATE 
AS
BEGIN
   IF ((SELECT DepartmentID from inserted) 
   NOT IN (SELECT DepartmentID FROM Departments))
        ROLLBACK 
END
-- 6
pass
-- 7
USE YGGL
GO
CREATE TRIGGER DepartmentsUpdate ON dbo. Departments
FOR UPDATE 
AS
BEGIN
   UPDATE Employees
     SET DepartmentID = ( SELECT DepartmentID FROM inserted)
     WHERE DepartmentID = (SELECT DepartmentID FROM deleted) 
END
-- 8
pass
